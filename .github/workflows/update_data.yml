name: Update Stock Data (Matrix Strategy)

on:
  # 允許手動觸發
  workflow_dispatch:
  # 設定排程，每日 UTC 時間 00:00 執行
  schedule:
    - cron: "0 0 * * *"

jobs:
  # --- 作業一：更新基本面資料 ---
  update_metadata:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.9

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Set up Node.js and Wrangler
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: npm install -g wrangler

      - name: Run metadata update script
        run: python scripts/update_metadata.py

      - name: Upload metadata to R2
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          R2_BUCKET_NAME: ${{ secrets.R2_BUCKET_NAME }}
        run: |
          set -e # 任何指令失敗就立刻停止
          echo "Uploading preprocessed_data.json to R2 bucket: ${R2_BUCKET_NAME}"
          wrangler r2 object put "${R2_BUCKET_NAME}/preprocessed_data.json" --file="./dist/preprocessed_data.json" --content-type "application/json"

      - name: Upload ticker list artifact
        uses: actions/upload-artifact@v4
        with:
          name: ticker-list-artifact
          path: ./dist/tickers.txt

  # --- 作業二：平行更新歷史價格 ---
  update_prices:
    needs: update_metadata # 等待作業一完成
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # 啟動 20 個平行的作業
        slice: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.9

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Set up Node.js and Wrangler
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: npm install -g wrangler

      - name: Download ticker list artifact
        uses: actions/download-artifact@v4
        with:
          name: ticker-list-artifact
          path: ./dist

      - name: Run price download script for slice ${{ matrix.slice }}
        run: python scripts/download_prices.py ${{ matrix.slice }} 20

      - name: Upload price data slice to R2
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          R2_BUCKET_NAME: ${{ secrets.R2_BUCKET_NAME }}
        run: |
          set -e # 任何指令失敗就立刻停止
          echo "--- Listing downloaded price files for slice ${{ matrix.slice }} ---"
          ls -l ./dist/prices
          echo "--- Starting upload to R2 bucket: ${R2_BUCKET_NAME} ---"
          # 只上傳這個作業產生的 CSV 檔案
          find ./dist/prices -type f -name "*.csv" | while read f; do
            echo "Uploading $(basename $f)..."
            wrangler r2 object put "${R2_BUCKET_NAME}/prices/$(basename $f)" --file="$f" --content-type "text/csv"
          done
          echo "--- Upload for slice ${{ matrix.slice }} complete ---"

